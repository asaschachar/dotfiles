set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab
set nu
set nobackup
set nowritebackup
set noswapfile
set mouse=a

" Colors
set t_Co=256
set background=dark
color wombat256-logan

" Plugin Settings
let g:vimclojure#HighlightBuiltins = 1
let g:vimclojure#ParenRainbow = 1
let g:vimclojure#WantNailgun = 1
let g:vimclojure#NailgunClient = $HOME."/vimclojure/client/ng"
let g:syntastic_auto_loc_list = 1
let g:ctrlp_user_command = {
\ 'types': {
  \ 1: ['.git', 'cd %s && git ls-files'],
  \ 2: ['.hg', 'hg --cwd %s locate -I .'],
  \ },
\ 'fallback': 'find %s -type f'
\ }
let $JS_CMD='node'

"let Tlist_GainFocus_On_ToggleOpen=1
"let Tlist_Show_One_File=1
"nnoremap <silent> <Leader>d :TlistToggle <CR>

" Useful replacements
iab AlP ABCDEFGHIJKLMNOPQRSTUVWXYZ
iab MoN January February March April May June July August September October November December
iab MoO Jan Feb Mar Apr May Jun Jul Aug Sep Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
iab NuM 12345678901234567890123456789012345678901234567890123456789012345678901234567890
iab RuL ----+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0

" Useful snippets
imap <C-l> <C-g>g<Space>=><Space>,<Left>
imap <C-a> array(
" map <C-l> wwwwyt-O$this->lm('<Esc>pA;<Esc>

" Create Blank Newlines and stay in Normal mode
nnoremap <silent> zj o<Esc>
nnoremap <silent> zk O<Esc>

" General
"" Huddler Config
map <Leader>d :e $PROJECTS/huddler/common/defines.php<Enter>:vsp $PROJECTS/huddler/config/sites/logan.huddler.com/conf/config.overrides.php<Enter>:sp $PROJECTS/huddler/config/sites/logan.huddler.com/conf/config.db.php<Enter>
map <Leader>dt :tabnew<Enter><Leader>d
"" Huddler Controllers
map <Leader>dc :e $PROJECTS/huddler/v2/system/application/libraries/HuddlerController.php<Enter>:vsp $PROJECTS/huddler/v2/system/application/libraries/HuddlerMobileController.php<Enter>:vsp $PROJECTS/huddler/v2/system/application/libraries/Huddler/Controller.php<Enter>
"" Align
map <Leader>= :Align=<Enter>
map <Leader>- :Align=><Enter>
map <Leader>] <C-w>]<C-w>H
map <C-j> jjjjjjjjjj
map <C-k> kkkkkkkkkk
map <Leader>gr :Gread<Enter>

""""""""""""""""""""""""

" Disable session dialog
let g:session_autosave='no'
" Enable filetype plugin
filetype plugin on

" Custom whitespace rules
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2 expandtab
autocmd Filetype shell setlocal ts=2 sts=2 sw=2 expandtab
autocmd Filetype python setlocal ts=4 sts=4 sw=4 expandtab

" Last tab binding
let g:lasttab = 1
nmap <C-w>; :exe "tabn ".g:lasttab<CR>
au TabLeave * let g:lasttab = tabpagenr()

" Safely alias :we to :w
cnoreabbrev <expr> we ((getcmdtype() is# ':' && getcmdline() is# 'w')?('we'):('w'))


" tabline modifications

if has('gui')
  set guioptions-=e
endif
if exists("+showtabline")
  function MyTabLine()
    let s = ''
    let t = tabpagenr()
    let i = 1
    while i <= tabpagenr('$')
      let buflist = tabpagebuflist(i)
      let winnr = tabpagewinnr(i)
      let s .= '%' . i . 'T'
      let s .= (i == t ? '%1*' : '%2*')
      let s .= ' '
      let s .= i . ':'
      let s .= winnr . '/' . tabpagewinnr(i,'$')
      let s .= ' %*'
      let s .= (i == t ? '%#TabLineSel#' : '%#TabLine#')
      let bufnr = buflist[winnr - 1]
      let file = bufname(bufnr)
      let buftype = getbufvar(bufnr, 'buftype')
      if buftype == 'nofile'
        if file =~ '\/.'
          let file = substitute(file, '.*\/\ze.', '', '')
        endif
      else
        let file = fnamemodify(file, ':p:t')
      endif
      if file == ''
        let file = '[No Name]'
      endif
      let s .= file
      let i = i + 1
    endwhile
    let s .= '%T%#TabLineFill#%='
    let s .= (tabpagenr('$') > 1 ? '%999XX' : 'X')
    return s
  endfunction
  set stal=2
  set tabline=%!MyTabLine()
endif
